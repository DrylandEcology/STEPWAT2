# ---- SWC limits ----
-1.0			# swc_min : cm/cm if 0 - <1.0, -bars if >= 1.0.; if < 0. then estimate residual water content for each layer
15.0			# swc_init: cm/cm if < 1.0, -bars if >= 1.0.
15.0			# swc_wet : cm/cm if < 1.0, -bars if >= 1.0.

# ---- Model flags and coefficients ----
0			# reset (1/0): reset/don't reset swc each new year
1			# deepdrain (1/0): allow/disallow deep drainage function.
			#   if deepdrain == 1, model expects extra layer in soils file.
1.0			# multiplier for PET (eg for climate change).
0.0			#proportion of ponded surface water removed as daily runoff (value ranges between 0 and 1; 0=no loss of surface water, 1=all ponded water lost via runoff)
0.0			#proportion of water that arrives at surface added as daily runon [from a hypothetical identical neighboring site] (value ranges between 0 and +inf; 0=no runon, >0: runon is occuring)

# ---- Snow simulation parameters (SWAT2K model): Neitsch S, Arnold J, Kiniry J, Williams J. 2005. Soil and water assessment tool (SWAT) theoretical documentation. version 2005. Blackland Research Center, Texas Agricultural Experiment Station: Temple, TX.
# these parameters are RMSE optimized values for 10 random SNOTEL sites for western US
0.61			# TminAccu2 = Avg. air temp below which ppt is snow ( C)
1.54			# TmaxCrit = Snow temperature at which snow melt starts ( C)
0.1			# lambdasnow = Relative contribution of avg. air temperature to todays snow temperture vs. yesterday's snow temperature (0-1)
0.0			# RmeltMin = Minimum snow melt rate on winter solstice (cm/day/C)
0.27			# RmeltMax = Maximum snow melt rate on summer solstice (cm/day/C)

# ---- Drainage coefficient ----
0.02			# slow-drain coefficient per layer (cm/day).  See Eqn 2.9 in ELM doc.
			# ELM shows this as a value for each layer, but this way it's applied to all.
			# (Q=.02 in ELM doc, .06 in FORTRAN version).

# ---- Evaporation coefficients ----
# These control the tangent function (tanfunc) which affects the amount of soil
# water extractable by evaporation and transpiration.
# These constants aren't documented by the ELM doc.
45.			# rate shift (x value of inflection point).  lower value shifts curve
			# leftward, meaning less water lost to evap at a given swp.  effectively
			# shortens/extends high rate.
.1			# rate slope: lower value (eg .01) straightens S shape meaning more gradual
			# reduction effect; higher value (.5) makes abrupt transition
.25			# inflection point (y-value of inflection point)
0.5			# range: diff btw upper and lower rates at the limits

# ---- Transpiration Coefficients ----
# comments from Evap constants apply.
45.          # rate shift
.1          # rate shape
.5          # inflection point
1.1          # range

# ---- Intrinsic site params: Blak, MT (47.06581° N, -108.5826° E,  m elevation) ----
-108.5826	# longitude of the site in degrees (W < 0; E > 0)
				# (currently not used by simulation, but useful for site documentation)
47.06581	# latitude of the site in degrees (N > 0; S < 0)
1039	# altitude of site (m a.s.l.)
0			# slope at site (degrees): no slope = 0, vertical = 90
999		# aspect at site (degrees): S=0, E=-90, N=±180, W=90; ignored if slope = 0 or aspect = 999

# ---- Soil Temperature Constants ----
# from Parton 1978, ch. 2.2.2 Temperature-profile Submodel
300.			# biomass limiter, 300 g/m^2 in Parton's equation for T1(avg daily temperature at the top of the soil)
15.			# constant for T1 equation (used if biomass <= biomass limiter), 15 in Parton's equation
-4.			# constant for T1 equation (used if biomass > biomass limiter), -4 in Parton's equation
600.        # constant for T1 equation (used if biomass > biomass limiter), 600 in Parton's equation
0.00070		# constant for cs (soil-thermal conductivity) equation, 0.00070 in Parton's equation
0.00030     # constant for cs equation, 0.00030 in Parton's equation
0.18		# constant for sh (specific heat capacity) equation, 0.18 in Parton's equation
6.69		# constant mean air temperature (the soil temperature at the lower boundary, 180 cm) in celsius
15.			# deltaX parameter for soil_temperature function, default is 15.  (distance between profile points in cm)  max depth (the next number) should be evenly divisible by this number
990.		# max depth for the soil_temperature function equation, default is 180.  this number should be evenly divisible by deltaX
0			# flag, 1 to calculate soil_temperature, 0 to not calculate soil_temperature

# ---- CO2 Settings ----
# Use biomass multiplier
0
# Use water-usage efficiency multiplier
0
# Scenario
RCP85

# --- Soil characterization ---
# Are inputs of density representing bulk soil (type 1) or the matric component (type 0)?
0



#--- Soil water retention curve (SWRC) ------
#
# Implemented options (`swrc_name`/`ptf_name`, see `swrc2str[]`/`ptf2str[]`):
#   - ptf_name = <other>: SWRC parameters must be provided via "swrc_params.in"
#   - swrc_name = "Campbell1974" (Campbell 1974)
#     * ptf_name = "Cosby1984AndOthers" (Cosby et al. 1984 but `swc_sat` by Saxton et al. 2006)
#     * ptf_name = "Cosby1984" (Cosby et al. 1984)
#   - swrc_name = "vanGenuchten1980" (van Genuchten 1980)
#   - swrc_name = "FXW" (Fredlund and Xing 1994, Wang et al. 2018)
#
# Note: option "Campbell1974"/"Cosby1984AndOthers" was hard-coded < v7.0.0
# Note: `rSOILWAT2` may implement additional PTFs

Campbell1974        # Specify soil water retention curve
Cosby1984AndOthers  # Specify pedotransfer function
                    # (if not implemented, then provide SWRC parameters via "swrc_params.in")

0     # Has SWRC parameters (see `has_swrcp`)?
      #    0: Estimate with specified pedotransfer function
      #    1: Use values from "swrc_params.in"


# ---- Transpiration regions ----
# ndx  : 1=shallow, 2=medium, 3=deep, 4=very deep
# layer: deepest layer number of the region.
#        Layers are defined in soils.in.
# ndx    layer
	1		2
	2		4
	3		6
#	4		8
